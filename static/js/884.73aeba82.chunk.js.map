{"version":3,"file":"static/js/884.73aeba82.chunk.js","mappings":"uMAwDA,UA5CqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAMpD,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaZ,GAASa,MAAK,SAAAC,GAAI,OAAIV,EAAaU,EAAjB,GAChC,GAAE,CAACd,KAGF,UAAC,KAAD,YACE,SAAC,KAAD,CAAUe,GAAIR,EAAaS,QAA3B,gCACCb,EAAUc,cACT,SAAC,KAAD,CACEC,IAAG,0CAAqCf,EAAUc,aAClDE,IAAI,eACJC,MAAM,SAGV,wBAAKjB,EAAUkB,SACf,wCAAgBlB,EAAUmB,iBAC1B,SAAC,KAAD,yBACA,uBAAInB,EAAUoB,YACd,SAAC,KAAD,uBACCpB,EAAUqB,SACT,uBAAIrB,EAAUqB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAErD,SAAC,KAAD,sCACA,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAAab,GAAG,OAAhB,qBAEF,yBACE,SAAC,KAAD,CAAaA,GAAG,UAAhB,wBAEF,SAAC,EAAAc,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C,yNCnDYC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sLAaRE,EAAQF,EAAAA,GAAAA,IAAH,2CAILG,EAAUH,EAAAA,GAAAA,IAAH,0GAOPI,EAAQJ,EAAAA,GAAAA,GAAH,8EAKLK,GAAcL,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+IAUXM,EAAON,EAAAA,GAAAA,GAAH,uD,oKCxCXO,EAAU,mCACVC,EAAW,+BAEJC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,uCAA2CD,IAAW1B,MAChE,SAAA8B,GAAI,OAAIA,EAAK7B,KAAK8B,OAAd,GAEP,EAEYhC,EAAe,SAAAZ,GAC1B,OAAO0C,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBxC,EAAtB,oBAAyCuC,IAAW1B,MAC9D,SAAA8B,GAAI,OAAIA,EAAK7B,IAAT,GAEP,EAEY+B,EAAkB,SAAA7C,GAC7B,OAAO0C,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBxC,EAAtB,4BAAiDuC,IAAW1B,MACtE,SAAA8B,GACE,OAAOA,EAAK7B,KAAKgC,IAClB,GAEJ,EAEYC,EAAkB,SAAA/C,GAC7B,OAAO0C,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBxC,EAAtB,4BAAiDuC,IAAW1B,MACtE,SAAA8B,GACE,OAAOA,EAAK7B,KAAK8B,OAClB,GAEJ,EACYI,EAAiB,SAAAC,GAC5B,OAAOP,EAAAA,EAAAA,GAAM,GAAD,OACPF,EADO,iCAC0BD,EAD1B,kBAC2CU,EAD3C,+CAEVpC,MAAK,SAAA8B,GACL,OAAOA,EAAK7B,KAAK8B,OAClB,GACF,C","sources":["pages/MovieDetails.jsx","pages/MovieDetails.styled.jsx","services.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieCard } from 'services';\nimport {\n  BackLink,\n  DetailsLink,\n  Image,\n  List,\n  Title,\n  Wrapper,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieCard, setMovieCard] = useState({});\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieCard(movieId).then(data => setMovieCard(data));\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <BackLink to={backLinkHref.current}>Back to collection</BackLink>\n      {movieCard.poster_path && (\n        <Image\n          src={`https://image.tmdb.org/t/p/w500/${movieCard.poster_path}`}\n          alt=\"movie poster\"\n          width=\"400\"\n        />\n      )}\n      <h2>{movieCard.title}</h2>\n      <p>User Score: {movieCard.vote_average}</p>\n      <Title>Overview:</Title>\n      <p>{movieCard.overview}</p>\n      <Title>Genres: </Title>\n      {movieCard.genres && (\n        <p>{movieCard.genres.map(genre => genre.name).join(', ')}</p>\n      )}\n      <Title>Additional information</Title>\n      <List>\n        <li>\n          <DetailsLink to=\"cast\">Cast</DetailsLink>\n        </li>\n        <li>\n          <DetailsLink to=\"reviews\">Reviews</DetailsLink>\n        </li>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </List>\n    </Wrapper>\n  );\n};\n\nexport default MovieDetails;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(NavLink)`\n  width: 200px;\n  text-align: center;\n  color: black;\n  padding: 8px 32px;\n  border: outset;\n  border-radius: 8px;\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 40px 32px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h3`\n  border-top: 1px solid black;\n  padding-top: 16px;\n`;\n\nexport const DetailsLink = styled(NavLink)`\n  color: black;\n  border: outset;\n  border-radius: 8px;\n  padding: 8px 32px;\n\n  &.active {\n    color: red;\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'cf74a053caf2f13dcb273d105945eeb6';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = () => {\n  return axios(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    resp => resp.data.results\n  );\n};\n\nexport const getMovieCard = movieId => {\n  return axios(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`).then(\n    resp => resp.data\n  );\n};\n\nexport const getMovieCredits = movieId => {\n  return axios(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    resp => {\n      return resp.data.cast;\n    }\n  );\n};\n\nexport const getMovieReviews = movieId => {\n  return axios(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    resp => {\n      return resp.data.results;\n    }\n  );\n};\nexport const getSearchMovie = query => {\n  return axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(resp => {\n    return resp.data.results;\n  });\n};\n"],"names":["movieId","useParams","useState","movieCard","setMovieCard","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieCard","then","data","to","current","poster_path","src","alt","width","title","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","BackLink","styled","NavLink","Image","Wrapper","Title","DetailsLink","List","API_KEY","BASE_URL","getTrendingMovies","axios","resp","results","getMovieCredits","cast","getMovieReviews","getSearchMovie","query"],"sourceRoot":""}