{"version":3,"file":"static/js/116.0145988c.chunk.js","mappings":"2PAGaA,EAAOC,EAAAA,GAAAA,GAAH,kIAQJC,EAAOD,EAAAA,GAAAA,GAAH,0GAOJE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qG,yNCfTI,GAAWJ,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sLAaRK,EAAQL,EAAAA,GAAAA,IAAH,2CAILM,EAAUN,EAAAA,GAAAA,IAAH,0GAOPO,EAAQP,EAAAA,GAAAA,GAAH,8EAKLQ,GAAcR,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+IAUXD,EAAOC,EAAAA,GAAAA,GAAH,uD,gHCxCJS,EAAOT,EAAAA,GAAAA,KAAH,gGAOJU,EAAQV,EAAAA,GAAAA,MAAH,sFAMLW,EAAYX,EAAAA,GAAAA,OAAH,qE,SCZTY,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAUA,OACE,UAACL,EAAD,CAAMM,SAVa,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAQF,EAAEG,cAAcD,MAAME,MAAMC,OAG1CP,EAF6B,KAAVI,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAG/CF,EAAEG,cAAcG,OACjB,EAEC,WACE,SAACZ,EAAD,CAAOa,KAAK,OAAOC,KAAK,WACxB,SAACb,EAAD,CAAWY,KAAK,SAAhB,sBAGL,E,6CCVYE,EAAmB,WAC9B,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAuBf,EAAAA,EAAAA,MAAhBgB,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXb,EAAQW,EAAaG,IAAI,SAO/B,OANAC,EAAAA,EAAAA,YAAU,WACHf,IAGLgB,EAAAA,EAAAA,IAAehB,GAAOiB,MAAK,SAAAC,GAAM,OAAIR,EAAcQ,EAAlB,GAClC,GAAE,CAAClB,KAEF,SAAC,KAAD,UACyB,IAAtBS,EAAWU,QACV,SAAC,KAAD,8CAEAV,EAAWW,KAAI,SAAAC,GAAK,OAClB,SAAC,KAAD,WACE,SAAC,KAAD,CAAWC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMb,GAArD,SACGS,EAAMK,SAFAL,EAAME,GADC,KAU3B,ECzBD,EATe,WACb,OACE,4BACE,SAAC7B,EAAD,KACA,SAACa,EAAD,MAGL,C,oKCRKoB,EAAU,mCACVC,EAAW,+BAEJC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,uCAA2CD,IAAWV,MAChE,SAAAc,GAAI,OAAIA,EAAKC,KAAKC,OAAd,GAEP,EAEYC,EAAe,SAAAC,GAC1B,OAAOL,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,oBAAyCR,IAAWV,MAC9D,SAAAc,GAAI,OAAIA,EAAKC,IAAT,GAEP,EAEYI,EAAkB,SAAAD,GAC7B,OAAOL,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,4BAAiDR,IAAWV,MACtE,SAAAc,GACE,OAAOA,EAAKC,KAAKK,IAClB,GAEJ,EAEYC,EAAkB,SAAAH,GAC7B,OAAOL,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,4BAAiDR,IAAWV,MACtE,SAAAc,GACE,OAAOA,EAAKC,KAAKC,OAClB,GAEJ,EACYjB,EAAiB,SAAAhB,GAC5B,OAAO8B,EAAAA,EAAAA,GAAM,GAAD,OACPF,EADO,iCAC0BD,EAD1B,kBAC2C3B,EAD3C,+CAEViB,MAAK,SAAAc,GACL,OAAOA,EAAKC,KAAKC,OAClB,GACF,C","sources":["components/TrendingMoviesList/TrendingMoviesList.styled.jsx","pages/MovieDetails.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies.jsx","services.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n`;\n\nexport const Item = styled.li`\n  padding: 8px;\n  padding-left: 20px;\n  border: outset;\n  border-radius: 8px;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: red;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(NavLink)`\n  width: 200px;\n  text-align: center;\n  color: black;\n  padding: 8px 32px;\n  border: outset;\n  border-radius: 8px;\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 40px 32px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h3`\n  border-top: 1px solid black;\n  padding-top: 16px;\n`;\n\nexport const DetailsLink = styled(NavLink)`\n  color: black;\n  border: outset;\n  border-radius: 8px;\n  padding: 8px 32px;\n\n  &.active {\n    color: red;\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 16px;\n  margin-left: 28px;\n  display: flex;\n  gap: 16px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  padding: 8px 16px;\n  border-radius: 8px;\n`;\n\nexport const SearchBtn = styled.button`\n  padding: 8px 32px;\n  border-radius: 8px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { Form, Input, SearchBtn } from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const query = e.currentTarget.query.value.trim();\n    const nextParams = query !== '' ? { query } : {};\n\n    setSearchParams(nextParams);\n    e.currentTarget.reset();\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" />\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </Form>\n  );\n};\n","import {\n  Item,\n  List,\n  MovieLink,\n} from 'components/TrendingMoviesList/TrendingMoviesList.styled';\nimport { Title } from 'pages/MovieDetails.styled';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services';\n\nexport const SearchMoviesList = () => {\n  const [searchList, setSearchList] = useState([]);\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getSearchMovie(query).then(movies => setSearchList(movies));\n  }, [query]);\n  return (\n    <List>\n      {searchList.length === 0 ? (\n        <Title>Try to find your favorite movie</Title>\n      ) : (\n        searchList.map(movie => (\n          <Item key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </MovieLink>\n          </Item>\n        ))\n      )}\n    </List>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { SearchMoviesList } from 'components/SearchMoviesList/SearchMoviesList';\n\nconst Movies = () => {\n  return (\n    <div>\n      <SearchForm />\n      <SearchMoviesList />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'cf74a053caf2f13dcb273d105945eeb6';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = () => {\n  return axios(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    resp => resp.data.results\n  );\n};\n\nexport const getMovieCard = movieId => {\n  return axios(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`).then(\n    resp => resp.data\n  );\n};\n\nexport const getMovieCredits = movieId => {\n  return axios(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    resp => {\n      return resp.data.cast;\n    }\n  );\n};\n\nexport const getMovieReviews = movieId => {\n  return axios(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    resp => {\n      return resp.data.results;\n    }\n  );\n};\nexport const getSearchMovie = query => {\n  return axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(resp => {\n    return resp.data.results;\n  });\n};\n"],"names":["List","styled","Item","MovieLink","NavLink","BackLink","Image","Wrapper","Title","DetailsLink","Form","Input","SearchBtn","SearchForm","useSearchParams","setSearchParams","onSubmit","e","preventDefault","query","currentTarget","value","trim","reset","type","name","SearchMoviesList","useState","searchList","setSearchList","searchParams","location","useLocation","get","useEffect","getSearchMovie","then","movies","length","map","movie","to","id","state","from","title","API_KEY","BASE_URL","getTrendingMovies","axios","resp","data","results","getMovieCard","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}